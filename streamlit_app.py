import streamlit as st
import time
from core import HMMModel
import stanza

# Model ve tokenizer y√ºkle
@st.cache_resource
def load_model():
    return HMMModel.load("models/hmm_model.pkl")

@st.cache_resource
def load_tokenizer():
    return stanza.Pipeline(lang='tr', processors='tokenize', use_gpu=False, verbose=False)

def tokenize(sentence, tokenizer):
    doc = tokenizer(sentence)
    return [word.text for sent in doc.sentences for word in sent.words]

def tag_sentence(model, tokenizer, sentence):
    words = tokenize(sentence, tokenizer)
    tags = model.viterbi_decode(words)
    return list(zip(words, tags))

# UI Ba≈ülƒ±yor
st.set_page_config(page_title="T√ºrk√ße POS Tagger", layout="centered")
st.title(" T√ºrk√ße POS Etiketleyici (HMM + Viterbi)")
st.markdown("Bir c√ºmle girin, sistem her kelimenin t√ºr√ºn√º tahmin etsin.")

# Input
user_input = st.text_input(" C√ºmle girin", placeholder="√ñrnek: Bug√ºn hava √ßok g√ºzel.")

# Model y√ºkleme
model = load_model()
tokenizer = load_tokenizer()

# Tahmin
if user_input:
    with st.spinner("Etiketleniyor..."):
        try:
            result = tag_sentence(model, tokenizer, user_input)
            st.success("‚úÖ Etiketleme tamamlandƒ±!")
            st.markdown("### üìä Sonu√ßlar:")
            st.table([{"Kelime": w, "POS Tag": t} for w, t in result])
        except Exception as e:
            st.error(f" Hata: {e}")
